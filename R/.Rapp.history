install.packages("corrgram")
install.packages("survival")
install.packages("shapefiles")
install.packages("rgdal")
install.packages("PBSmapping")
install.packages("sp")
install.packages("gdistance")
install.packages("chron")
install.packages("unmarked")
install.packages("lme4")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")#
require(rgeos)
install.packages('rgdal',repos="http://www.stats.ox.ac.uk/pub/RWin")
library(rgdal)
install.packages("http://cran.r-project.org/src/contrib/rgdal_0.9-1.tar.gz", repos = NULL, type="source", configure.args = "--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/1.10/unix/bin/gdal-config --with-proj-include=/Library/Frameworks/PROJ.framework/unix/include --with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib")
18/1.618
189+114
library(lubridate)
library(magrittr)
seasons <- data.frame(#
	   SE = as.POSIXct(c("2009-3-20", "2010-3-20", "2011-3-20", "2012-3-20", #
            "2013-3-20", "2014-3-20"), format="%Y-%m-%d"),#
	   SS = as.POSIXct(c("2009-6-21", "2010-6-21", "2011-6-21", "2012-6-20",#
            "2013-6-20", "2014-6-20"), format="%Y-%m-%d"),#
	   FE = as.POSIXct(c("2009-9-22", "2010-9-23", "2011-9-23", "2012-9-22",#
            "2013-9-22", "2014-9-22"), format="%Y-%m-%d"),#
	   WS = as.POSIXct(c("2009-12-21", "2010-12-21", "2011-12-22", "2012-12-21", #
            "2013-12-21", "2014-12-21"), format="%Y-%m-%d")#
    )#
#
    assignSeason <- function(dat, SeasonStarts=seasons) {#
	    dat %<>% mutate(#
		    Season = lapply(Date,#
				function(x) {#
					findInterval(#
						x, #
						SeasonStarts[which(year(x)==year(SeasonStarts$WS)), ]#
					)#
				}#
			) %>% unlist	#
		)#
	    dat[which(dat$Season==0 | dat$Season==4), ]$Season 	<- "Winter"#
	    dat[which(dat$Season==1), ]$Season 					<- "Spring"#
	    dat[which(dat$Season==2), ]$Season 					<- "Summer"#
	    dat[which(dat$Season==3), ]$Season 					<- "Fall"#
	    return(dat)#
    }
dat = data.frame(#
	    Date = as.POSIXct(strptime(as.Date("2011-12-01", format = "%Y-%m-%d") + #
            (0:10)*30, format="%Y-%m-%d" ))#
    )#
    dat %>% assignSeason
library(dplyr)
dat = data.frame(#
	    Date = as.POSIXct(strptime(as.Date("2011-12-01", format = "%Y-%m-%d") + #
            (0:10)*30, format="%Y-%m-%d" ))#
    )#
    dat %>% assignSeason
library(devtoolks)
library(devtools)
?install_github
devtools::install_github("ksauby/ACSampling", auth_token="2ab30a602e52fae481f4249cc25e892c0a9ccfc7", subdir="/code/Restricted_ACS_Simulations/ACSampling", repos=NULL)
devtools::install_github("ksauby/ACSampling", auth_token="2794c3f10db92f525181a0b1f6c19064fe3a2ef3", subdir="/code/Restricted_ACS_Simulations/ACSampling", repos=NULL)
devtools::install("~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="~/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install_local(path="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
library(devtools)
devtools::install_local(path="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
install.packages("~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
??limit
37-13
24/37
37-13
26/37
25/37
23/37
29/37
30/37
22/37
30/37
29/37
28/37
27/37
35/37
30/37
29/37
26/37
26/37 - .6757
28/37
30/37
29/37
37-12
25/37
219*.8
219*.8 - 17
26/3
17/900
42/900
49/900
29/40
1/25
8/25
10/25
(7.5 + 3.75)/15
12*0.75
11 * 0.75
11/15
11*0.25
11/15 * 6
32/41 +0.03.5
32/41 + 0.035
(32/41 + 0.035)*100
100/41
23/40 * 100
(23/40 * 100)+5
(164 + 13.5 + 6)
(164 + 13.5 + 6)/365
(164 + 13.5 + 6 + (50))/365
(164 + 13.5 + 6 + (60))/365
(164 + 13.5 + 6 + (70))/365
(164 + 13.5 + 6 + (75))/365
102/40
102/41
?table
9.49/2
12.75+8.25
(10.5 + 6.5)/(12.75+8.25)
.25^2 * 2
(.25^2 * 2)^0.5
(.25^2 * 2)^0.5 * 2
3/8
5/8
6/8
30*1.5
40*15
40*1.5
13.25 - 4.5
(276.29+8.75)/365
16*3
16*4
84/12
9/12
9/12*14
22+60+78+80+88+98
22+38+18+2+8+10
239/785
(239+53)/785
.492+.139
.412+.166+.002
.412/.58
.166/.58
.412*.58
.71*.58
98-54
22+49+43+33+36+44
60-11
78-26
80-35
88-47
98-52
22+49+52+45+41+46
library(RMark)
?test_ddl
data(dipper)    dipper.processed=process.data(dipper,groups=("sex"))    release.gof(dipper.processed)
4+19+7+12
4+17.83+7+12
40.83/42
40.83/42*14
14
(11.25+5)/(25.5 + 10.25 - 14)
365*0.6666
365*0.6666 - 75.89
5/6 * 2
5/6 * 2 + 75.89
365*0.6666 -77.55667
365*0.6666 -77.55667 - 6 - 13 - 1
145.7523/2
15*3
11*5
8/12*14
4+15.33+5.5+12
(4+15.33+5.5+12)
(4+15.33+5.5+12)/(4+19+7+12)
(4+19+7+12)
(4+15.33+5.5+12)/(4+19+7+12)*14
2.5+17.5+12
32/42
32/42 * 14
4+12+6.5+12
(4+12+6.5+12)/42 * 14
5/6*2
5/6*2 + 0.25
5/6*2 + 0.5
2577.77/12
15/20
15/20*6
300 - 4*50
300 - 4*40
4.5/12*14
9+9+7+9
33.5/34 * 14
32/34 * 14
32/34*14
7+8.5+7+7
(7+8.5+7+7)/34 * 14
(7+5.5+5.5+8.5)/34 * 14
(7+5.5+5.5+8.5)/(9+7+9+9) * 14
9+7+9+9
(14.25+7.25)/(24.75+10.25-9)
(16.5+7.75)/(24.75+10.25)
(16.5+7.75)/(24.75+10.25)*6
(5.25+5.5)/(22.5+10.5)
(5.25+5.5)/(22.5+10.5)*6
(9.75+5.5)/(24.7+10.25-5)*6
(9.75+5.5)/(24.7+10.25-5)
3.98/6
(9.75+5.5)/(24.7+10.25-10)
(9.75+5.5)/(24.7+10.25-10)*6
5/6*2
1.83-5/6*2
1.83-4/6*2
5/6*2 + 0.5
4/6*2 + 0.5
4/6*2
4/6 + 0.5
4/6*2 + 0.5
33/34 * 14
17.5*4
24*4 + 1.75*4
library(dplyr)
library(plyr)
setwd('/Users/KSauby/Documents/Projects/marsico-time-series')
library(ProjectTemplate)#
#setwd("/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series")#
# load project#
load.project()
setwd('/Users/KSauby/Documents/Projects/marsico-time-series/munge')
timeseries <- timeseries.8jun17KS.mod#
#
timeseries <- processData(timeseries)#
timeseries_obs_after_USDA <- keepUSDAData(timeseries)#
timeseries <- removeData(timeseries)#
#
# climate_data <- processWeather()#
#
################################################################################
# timeseries_survival#
################################################################################
timeseries_survival <- createSurvivalDataset(timeseries)#
#
# rescale, drop levels, reorder#
timeseries_survival_stricta = timeseries_survival %>% #
	as.data.frame %>%#
	filter(Species=="Opuntia stricta") %>%#
	droplevels#
timeseries_survival_stricta$PlantID2 %<>% factor#
#
timeseries_survival_humifusa = timeseries_survival %>% #
	as.data.frame %>%#
	filter(Species=="Opuntia humifusa") %>%#
	droplevels#
timeseries_survival_humifusa$PlantID2 %<>% factor#
#
setwd('/Users/KSauby/Documents/Projects/marsico-time-series')#
cache("timeseries_survival_stricta")#
cache("timeseries_survival_humifusa")#
#
setwd('/Users/KSauby/Documents/Projects/marsico-time-series/data')#
write.csv(timeseries_survival_stricta, "timeseries_survival_stricta.csv")#
write.csv(timeseries_survival_humifusa, "timeseries_survival_humifusa.csv")#
################################################################################
# timeseries_all_surveys#
################################################################################
timeseries_all_surveys <- createAllSurveysDataset(timeseries)
?mutate_at
setwd('/Users/KSauby/Documents/Projects/Panhandleproc/R')
FirstSurveyPlantIDs <- #
		timeseries[which(timeseries$VisitNum==1), ]$PlantID %>% #
		unique#
	# filter out plants not surveyed during the first survey; filter out plants hacked by the USDA#
	timeseries_survival = timeseries %>%#
		as.data.frame %>%#
		filter(#
			PlantID != "HBSPOS10" &#
			PlantID != "HBSPOS11" &#
			PlantID != "HBSPOS12" &#
			PlantID != "HBSPOS15" &#
			PlantID != "HBSPOS16" &#
			PlantID != "HBSPOS17" &#
			PlantID != "HBSPOS18" &#
			PlantID != "HBSPOS5"#
		) %>%#
		filter(PlantID %in% FirstSurveyPlantIDs)#
		# lag_size_fruit_function %>%#
		# lag_dates_function %>%#
		# lag_insects_function#
	# create "Dead_numeric" variable with values 0, 1#
	# create "Dead" variable with values "Dead", "Alive"			#
	# timeseries_survival$Dead_numeric <- timeseries_survival$Dead#
	# timeseries_survival$Dead %<>% #
	#	as.factor %>% #
	#	revalue(c("0"="Alive", "1"="Dead"))#
	# summarise whether plant was every infested with an insect#
	# summarise whether a plant died during the s
setwd('/Users/KSauby/Documents/Projects/marsico-time-series/munge')
timeseries <- timeseries.8jun17KS.mod#
#
timeseries <- processData(timeseries)#
timeseries_obs_after_USDA <- keepUSDAData(timeseries)#
timeseries <- removeData(timeseries)#
#
# climate_data <- processWeather()#
#
################################################################################
# timeseries_survival#
################################################################################
timeseries_survival <- createSurvivalDataset(timeseries)
setwd('/Users/KSauby/Documents/Projects/Panhandleproc/R')
timeseries_all_surveys <- timeseries
setwd('/Users/KSauby/Documents/Projects/Panhandleproc/R')
arrange.variable="Date"
setwd('/Users/KSauby/Documents/Projects/Panhandleproc/R')
grouping.variable="PlantID"
x <- timeseries_all_surveys
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
vars = c(#
		"Size_t", #
		"Height_t", #
		"Cone_t", #
		"Cylinder_Tall_t", #
		"Cylinder_t", #
		"Elliptic_Cylinder_t",#
		"Size_max_t",#
		"Size_min_t",#
		"Cone_max_t",#
		"Cone_min_t",#
		"Cylinder_Tall_max_t",#
		"Cylinder_Tall_min_t"#
	)
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
x %<>% #
		arrange_(.dots = arrange.variable) %>%#
		group_by_(.dots = grouping.variable)#
		# make a copy to use in the iterations#
	y <- x
i=1
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
vars[i] %in% names(x)
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
mycols <- c(arrange.variable, vars[i])
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
z <- x %>% dplyr::select_(#
				.dots = c(#
					grouping.variable,#
					names(.)[match(mycols, names(x))]#
				)#
			)
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
vars[i]
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
var.names <- setNames(vars[i], paste0(vars[i], "_1"))
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
var.names
sgtr(var.names)
str(var.names)
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
funs(lag)
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
z %<>% mutate_at(funs(lag), var.names)
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
var.names <- setNames(vars[i], paste0(vars[i], "_1")) %>% as.vector
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
z %<>% mutate_at(funs(lag), var.names)
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
var.names
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
mutate_at(funs(lag), var.names)
?lag
setwd('/Users/KSauby/Documents/Projects/dataproc/R')
z %<>% mutate_at(funs(dplyr::lag), var.names)
str(z)
