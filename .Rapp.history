21.4*.813
21.4 -21.4*.813
library(lubridaste)
library(lubrida=te)
library(lubridate)
-v
install.packages("rgeos", repos="http://R-Forge.R-project.org")#
require(rgeos)
library(rgeos)
require(rgeos)
library(rgeos)
install.packages("rgdal", repos="http://R-Forge.R-project.org")#
require(rgdal)
R CMD INSTALL ~/Downloads/rgdal_0.9-1.tar.gz --configure-args='--with-gdal-config=/Library/Frameworks/GDAL.framework/Programs/gdal-config#
 --with-proj-include=/Library/Frameworks/PROJ.framework/Headers#
 --with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib'
R CMD INSTALL ~/Downloads/rgdal_0.9-1.tar.gz --configure-args='--with-gdal-config=/Library/Frameworks/GDAL.framework/Programs/gdal-config--with-proj-include=/Library/Frameworks/PROJ.framework/Headers--with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib'
library(lme3)
library(lme4)
300/241
.244*30
1.25*300
1.25*240
7*12
7849-7527
322/1353
8028-7527
501/1353
8028-7957
1353-501
852/71
7956-7878
8176-8029
8176-8092
250*.75
250*.25
42*2 + 17*2
118/19
21/6.2
59.5*.75
59.5*.5 + 59.5
71/12
597/80
597/8
432/8
15*8 + 9*3
?seq_len
7.25/3
7.25/4
for(i in 0:9){x=cos(2*pi/10*i);y=x+1;z=(y-2)*22;pie(c(y,8-y),col=c(0,7),init.angl=135-z,bo=F,la=NA)}
install.packages("ProjectTemplate")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("data.table")
install.packages("corrgram")
install.packages("survival")
install.packages("shapefiles")
install.packages("rgdal")
install.packages("PBSmapping")
install.packages("sp")
install.packages("gdistance")
install.packages("chron")
install.packages("unmarked")
install.packages("lme4")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")#
require(rgeos)
install.packages('rgdal',repos="http://www.stats.ox.ac.uk/pub/RWin")
library(rgdal)
install.packages("http://cran.r-project.org/src/contrib/rgdal_0.9-1.tar.gz", repos = NULL, type="source", configure.args = "--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/1.10/unix/bin/gdal-config --with-proj-include=/Library/Frameworks/PROJ.framework/unix/include --with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib")
18/1.618
189+114
library(lubridate)
library(magrittr)
seasons <- data.frame(#
	   SE = as.POSIXct(c("2009-3-20", "2010-3-20", "2011-3-20", "2012-3-20", #
            "2013-3-20", "2014-3-20"), format="%Y-%m-%d"),#
	   SS = as.POSIXct(c("2009-6-21", "2010-6-21", "2011-6-21", "2012-6-20",#
            "2013-6-20", "2014-6-20"), format="%Y-%m-%d"),#
	   FE = as.POSIXct(c("2009-9-22", "2010-9-23", "2011-9-23", "2012-9-22",#
            "2013-9-22", "2014-9-22"), format="%Y-%m-%d"),#
	   WS = as.POSIXct(c("2009-12-21", "2010-12-21", "2011-12-22", "2012-12-21", #
            "2013-12-21", "2014-12-21"), format="%Y-%m-%d")#
    )#
#
    assignSeason <- function(dat, SeasonStarts=seasons) {#
	    dat %<>% mutate(#
		    Season = lapply(Date,#
				function(x) {#
					findInterval(#
						x, #
						SeasonStarts[which(year(x)==year(SeasonStarts$WS)), ]#
					)#
				}#
			) %>% unlist	#
		)#
	    dat[which(dat$Season==0 | dat$Season==4), ]$Season 	<- "Winter"#
	    dat[which(dat$Season==1), ]$Season 					<- "Spring"#
	    dat[which(dat$Season==2), ]$Season 					<- "Summer"#
	    dat[which(dat$Season==3), ]$Season 					<- "Fall"#
	    return(dat)#
    }
dat = data.frame(#
	    Date = as.POSIXct(strptime(as.Date("2011-12-01", format = "%Y-%m-%d") + #
            (0:10)*30, format="%Y-%m-%d" ))#
    )#
    dat %>% assignSeason
library(dplyr)
dat = data.frame(#
	    Date = as.POSIXct(strptime(as.Date("2011-12-01", format = "%Y-%m-%d") + #
            (0:10)*30, format="%Y-%m-%d" ))#
    )#
    dat %>% assignSeason
library(devtoolks)
library(devtools)
?install_github
devtools::install_github("ksauby/ACSampling", auth_token="2ab30a602e52fae481f4249cc25e892c0a9ccfc7", subdir="/code/Restricted_ACS_Simulations/ACSampling", repos=NULL)
devtools::install_github("ksauby/ACSampling", auth_token="2794c3f10db92f525181a0b1f6c19064fe3a2ef3", subdir="/code/Restricted_ACS_Simulations/ACSampling", repos=NULL)
devtools::install("~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="~/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install_local(path="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
library(devtools)
devtools::install_local(path="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
install.packages("~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series')
library(ProjectTemplate)#
setwd("/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series")#
# load project#
load.project()
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/munge')
# timeseries <- timeseries.25Jan2015JK.mod#
#
timeseries <- processData(timeseries.25Jan2015JK.mod)#
timeseries_obs_after_USDA <- keepUSDAData(timeseries)#
timeseries <- removeData(timeseries)#
#
# climate_data <- processWeather()#
#
################################################################################
# timeseries_survival#
################################################################################
timeseries_survival <- createSurvivalDataset(timeseries)#
#
# rescale, drop levels, reorder#
timeseries_survival_stricta = timeseries_survival %>% #
	as.data.frame %>%#
	filter(Species=="Opuntia stricta") %>%#
	droplevels#
timeseries_survival_stricta$PlantID2 %<>% factor#
#
timeseries_survival_humifusa = timeseries_survival %>% #
	as.data.frame %>%#
	filter(Species=="Opuntia humifusa") %>%#
	droplevels#
timeseries_survival_humifusa$PlantID2 %<>% factor#
#
setwd('/Users/KSauby/Documents/Dropbox/GradSchool/Research/Projects/marsico-time-series')#
cache("timeseries_survival_stricta")#
cache("timeseries_survival_humifusa")#
#
setwd('/Users/KSauby/Documents/Dropbox/GradSchool/Research/Projects/marsico-time-series/data')#
write.csv(timeseries_survival_stricta, "timeseries_survival_stricta.csv")#
write.csv(timeseries_survival_humifusa, "timeseries_survival_humifusa.csv")#
################################################################################
# timeseries_all_surveys#
################################################################################
timeseries_all_surveys <- createAllSurveysDataset(timeseries)#
#
setwd("/Users/KSauby/Documents/Dropbox/GradSchool/Research/Projects/marsico-time-series/")#
cache("timeseries_all_surveys")#
write.csv(timeseries_all_surveys, "./data/timeseries_all_surveys.csv")#
timeseries_obs_after_USDA <- createAllSurveysDataset(timeseries_obs_after_USDA)#
#
setwd("/Users/KSauby/Documents/Dropbox/GradSchool/Research/Projects/marsico-time-series/")#
cache("timeseries_obs_after_USDA")#
write.csv(timeseries_all_surveys, "./data/timeseries_obs_after_USDA.csv")#
#
################################################################################
# Fecundity#
################################################################################
timeseries_fecundity <- createFruitYearDataset(timeseries)#
#
setwd("/Users/KSauby/Documents/Dropbox/GradSchool/Research/Projects/marsico-time-series/")#
cache("timeseries_fecundity")#
write.csv(timeseries_fecundity, "./data/timeseries_fecundity.csv")
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/munge')
# list of climate files to fix#
climate_file_names <- c("NOAA.ApalachicolaAirport", "NOAA.ApalachicolaAirport1", "NOAA.Bloxham", "NOAA.Bristol2", "NOAA.Callaway03", "NOAA.Callaway06S", "NOAA.Chipley", "NOAA.Clarksville2N", "NOAA.CrestviewBobSikesAirport", "NOAA.DeFuniakSprings", "NOAA.Destin1", "NOAA.DestinFortWaltonBeach", "NOAA.Freeport34", "NOAA.Freeport40SSW", "NOAA.Freeport44", "NOAA.Hosford27", "NOAA.Marianna7NE", "NOAA.NavalLiveOaks", "NOAA.NWFLBeaches", "NOAA.PanamaCity", "NOAA.PanamaCityBayCoAirport", "NOAA.PanamaCityBeach03", "NOAA.PanamaCityBeach12ESE", "NOAA.PensacolaForest", "NOAA.PensacolaRegionalAirport", "NOAA.PortStJoe06", "NOAA.PortStJoe81", "NOAA.Quincy3SSW", "NOAA.Sumatra", "NOAA.Telogia", "NOAA.ValparaisoEglinAFB", "NOAA.Vernon106", "NOAA.WestPensacola109", "NOAA.Wewahitchka", "NOAA.Wewahitchka16", "NOAA.Wilma", "NOAA.WoodruffDam", "NOAA.Bellview17", "NOAA.Pensacola92", "NOAA.MiramarBeach95", "NOAA.InletBeach07", "NOAA.PanamaCityBeach59", "NOAA.Apalachicola08WNW", "NOAA.NewHope", "NOAA.Destin15")#
#
wstations <- ghcnd.stations.NW.FL.current#
Location_list <- c("BLSP", "HBSP", "MB", "N", "SASP", "TSP")#
#
DegreeDay_list <- c(#
	"UCD.IPM.BLSP.DegreeDays",#
	"UCD.IPM.HBSP.DegreeDays",#
	"UCD.IPM.MB.DegreeDays",#
	"UCD.IPM.N.DegreeDays",#
	"UCD.IPM.SASP.DegreeDays",#
	"UCD.IPM.TSP.DegreeDays"#
)#
sites <- Marsico.Florida.data.collection.site.location.summary#
wstations %<>% formatWeatherStationInfo#
climate_data <- mergeClimateFiles(climate_file_names) %>%#
	filterClimateDataByQuality %>%#
	formatconvertClimateData#
climate_data %<>% filter(Date <= "2014-01-17", Date >= "2008-01-20")#
climate_data %<>% filter(MaxTemp != MinTemp)#
Datalist <- findClosestWeatherStations(sites, climate_data, Distance=85) #
climate_data <- getClimateDataByLocationDate(Datalist)
library(dataproc)
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/munge')
Datalist <- findClosestWeatherStations(sites, climate_data, Distance=85) #
climate_data <- getClimateDataByLocationDate(Datalist)
library(rgdal)
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/munge')
Datalist <- findClosestWeatherStations(sites, climate_data, Distance=85) #
climate_data <- getClimateDataByLocationDate(Datalist)
setwd('/Users/KSauby/Documents/Projects')
setwd("./dataproc")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects')
setwd("./dataproc")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
